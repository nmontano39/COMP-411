nbm1
sec14

# Program Organization

For this assignment, we first modified our parser to return a ParseException everywhere a null or identifier
is not followed by : Type. Next, our type-checking recursively traverses the AST by implementing ASTVisitor in
TypeCheck.java and throws TypeExceptions where necessary. By type-checking, we ensure that all variables are typed
including those used as arguments for functions and as components of lists.


# Testing Processes

We decided to use the provided test cases along with additional tests of our own. Some edge cases we
tested for include lists of typed-nulls and incorrectly typed lists/functions. Our code passes all of
these tests with 66% line coverage.