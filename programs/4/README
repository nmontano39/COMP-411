nbm1
sec14

# Program Organization

Adding ref cells and assignment:
In order to include the use of ref calls, we created two classes implementing JamVal in JamVal.java named
JamBox and Unit. When our interpreter encounters a ref call, it creates a JamBox and gets/sets the internal
value for ! and <- and returns the special unit value when appropriate.

Adding blocks:
To handle blocks, we created a class implementing AST in AST.java named Block. A Block is constructed similar
to a Box except it contains a list of expressions instead of a value. When our interpreter encounters a left
brace it creates a Block object and evaluates each internal expression from left to right and returns the
rightmost evaluation.


# Testing Processes

We decided to use the provided 10 test cases along with 10 additional tests of our own. Some edge cases we
tested for include references inside references, maps inside references, and references inside blocks. Our
code passes all of these 20 tests with 77% line coverage.